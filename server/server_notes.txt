//////////////////////////////////////

router setup:

setup port forwards for 443, 80, 3000
// disable 80 and 3000 after initial caprover setup. 

///////////////////////////////////////

domain setup (https://www.namecheap.com/support/knowledgebase/article.aspx/319/2237/how-can-i-set-up-an-a-address-record-for-my-domain/):

add an "A record" to your domain in the DNS settings. 

give HOST the value of "*" (wildcard)

give VALUE the value of local network WAN IP. 

///////////////////////////////////////

Server Setup:

OS: ubuntu 22

ubuntu general setup:

apt-get install timeshift
// defualt settings

apt-get install genome-tweaks
// diable suspend on lid closed.

nano /etc/systemd/logind.conf
    HandleLidSwitch=ignore
// change HandleLidSwitch to ignore & uncomment.

settings
    no suspend on battery

//////////////////////////////////////

docker install (https://docs.docker.com/engine/install/ubuntu/):

apt-get update

apt-get install ca-certificates curl gnupg lsb-release

mkdir -p /etc/apt/keyrings

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

apt-get update

apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

///////////////////////////////////////

capRover install (https://caprover.com/docs/get-started.html):

ufw allow 80,443,3000,996,7946,4789,2377/tcp; ufw allow 7946,4789,2377/udp;
// setup firewall

docker run -e MAIN_NODE_IP_ADDRESS=0.0.0.0 -p 80:80 -p 443:443 -p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock -v /captain:/captain caprover/caprover
// make 0.0.0.0 your local ip address

///////////////////////////////////////

caprover cli setup:
// install on dev system

npm install -g caprover

///////////////////////////////////////

caprover serversetup
 //one time operation to configure server the questions below are asked.

? have you already started CapRover container on your server? Yes
? IP address of your server: (WAN IP)
? CapRover server root domain: domain.name
? new CapRover password (min 8 characters): [hidden]
? enter new CapRover password again: [hidden]
? "valid" email address to get certificate and enable HTTPS: [your@email.com]
? CapRover machine name, with whom the login credentials are stored locally: [yourCustomCapRoverMachineName]

// server is then accessible at captain.the.domain

///////////////////////////////////////



///////////////////////////////////////

static website deployment:

*the website needs to be functional before deployment. if it does not work on live server it won't deploy.

in server admin panel
  open "Apps"
  add a name for the new app inside the input box (lower case letters and "-" only)
  click "Create New App"
  the new app will be added to the list "Your Apps"
  click on the app name
  click on "Enable HTTPS"
  click "Save & Update"

make a file named "captain-definition" with no extension. 
  add to the file: 
  {  
    "schemaVersion": 2,  
    "dockerfilePath" :"./Dockerfile"
  }

make a file named "Dockerfile" with no extension inside the project directory.
  add to the file: 
  FROM nginx:alpine
  COPY . /usr/share/nginx/html

the server requires a local git repo to be setup && initial commit completed. 
  inside the project directory run:
  git init
  git add .
  git commit -m "initial commit"

use caprover command to deploy website.
  inside the project directory run:
  caprover deploy

  prompts:
  ? select caprover server name
  ? select name of the app to deploy too
  ? git branch

the site is deployed at https://"app-name".devdock.me

///////////////////////////////////////

node app deployment:

* package.json must have a start script for main js file.

in server admin panel
  open "Apps"
  add a name for the new app inside the input box (lower case letters and "-" only)
  click "Create New App"
  the new app will be added to the list "Your Apps"
  click on the app name
  click on "Enable HTTPS"
  make "container HTTP port" = 443
  click "Force HTTPS by redirecting all HTTP traffic to HTTPS"
  click "Save & Update"

make a file named "captain-definition" with no extension. 
  add to the file: 
  {  
    "schemaVersion": 2,  
    "templateId" :"node/'NODE VERSION HERE'"
  }

the server requires a local git repo to be setup && initial commit completed. 
  inside the project directory run:
  git init
  git add .
  git commit -m "initial commit"

use caprover command to deploy website.
  inside the project directory run:
  caprover deploy

  prompts:
  ? select caprover server name
  ? select name of the app to deploy too
  ? git branch

the site is deployed at https://"app-name".devdock.me